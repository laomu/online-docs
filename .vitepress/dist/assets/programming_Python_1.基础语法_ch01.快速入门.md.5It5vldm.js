import{_ as s,c as a,o as t,ag as e}from"./chunks/framework.Di6YtP3y.js";const o="/online-docs/assets/image-20241110193300319.DGTUgtkb.png",l="/online-docs/assets/image-20241015184225941.yYgChpMF.png",n="/online-docs/assets/image-20241015184506753.CCiYRWii.png",p="/online-docs/assets/image-20241015185748769.CCv1IsiD.png",r="/online-docs/assets/image-20241110200155322.BOu57uhK.png",h="/online-docs/assets/image-20241015200420364.BlU3IcLM.png",c="/online-docs/assets/image-20241015200604612.CD_N3s7s.png",d="/online-docs/assets/image-20241015201556020.BNGO8g5F.png",g="/online-docs/assets/image-20241015201655899.BqG8c3PU.png",m="/online-docs/assets/image-20241015201910665.zwUWoRZj.png",u="/online-docs/assets/image-20241015202546845.BPQDwwyl.png",k="/online-docs/assets/image-20241015202939054.5rbWGMcz.png",_="/online-docs/assets/image-20241015203422710.CJ4-k9ra.png",y="/online-docs/assets/image-20241015204050327.Djn9YEVP.png",b="/online-docs/assets/image-20241015204149128.CjpwbPAz.png",P="/online-docs/assets/image-20241016144923846.D3jcETvv.png",q="/online-docs/assets/image-20241015204504022.sv8XRe5T.png",C="/online-docs/assets/image-20241015204602713.EXe1KrxC.png",F="/online-docs/assets/image-20241015204716470.DAgdjHpd.png",x="/online-docs/assets/image-20241015204833448.6lY-hyGx.png",v="/online-docs/assets/image-20241016145042685.7j0vYAE5.png",w="/online-docs/assets/image-20241015205811287.B0KPsW5V.png",f="/online-docs/assets/image-20241015210002936.CqkE2jQb.png",D="/online-docs/assets/image-20241015210127921.6O3ErQIS.png",E="/online-docs/assets/image-20241015210215066.DjLZ-NNk.png",A="/online-docs/assets/image-20241015211949237.HF0lkrOz.png",B="/online-docs/assets/image-20250502102338028.Co3RG-iQ.png",N=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"programming/Python/1.基础语法/ch01.快速入门.md","filePath":"programming/Python/1.基础语法/ch01.快速入门.md"}'),R={name:"programming/Python/1.基础语法/ch01.快速入门.md"};function S(I,i,V,j,G,T){return t(),a("div",null,i[0]||(i[0]=[e('<h2 id="第一章-快速入门" tabindex="-1">第一章：快速入门 <a class="header-anchor" href="#第一章-快速入门" aria-label="Permalink to &quot;第一章：快速入门&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>学习目标：</p><p>1、 了解什么是编程</p><p>2、 构建开发环境</p><p>3、 第一个应用开发</p><p>4、 认识开发工具</p></div><h3 id="_1-1、-编程和生活" tabindex="-1">1.1、 编程和生活 <a class="header-anchor" href="#_1-1、-编程和生活" aria-label="Permalink to &quot;1.1、 编程和生活&quot;">​</a></h3><h4 id="_1-什么是编程" tabindex="-1">(1) 什么是编程？ <a class="header-anchor" href="#_1-什么是编程" aria-label="Permalink to &quot;(1) 什么是编程？&quot;">​</a></h4><p>对于大部分人，刚开始了解编程，还没有修仙了解的透彻！</p><p><img src="'+o+'" alt="image-20241110193300319"></p><p>到底什么是编程？</p><p>编程：字面意思就是编写代码，就是通过更加简洁的代码语法，描述生活中的事物！通过描述的生活场景完成数据的运算过程！所有人都可以学习编程-懂生活、懂编程！</p><p>问题：数学、英语，会影响编程的学习码？</p><p>答案：会！一般对于初级、中级、高级开发人员，数学和英文的影响非常小！除非到达架构设计的高度，需要学习和了解大量的原始学习资料(大部分都是英文版本)</p><p>如：平时思考一些事情的实现方式！具象化之后会形成执行步骤！这就是编程！</p><p><img src="'+l+'" alt="image-20241015184225941"></p><p>如：根据生活中的一些场景，计算数据的问题</p><p><img src="'+n+'" alt="image-20241015184506753"></p><p>如：运维工作，平时处理一些维护任务，清理日志、检测CPU使用率、检测内存使用率、检测磁盘空间使用率...</p><ul><li>手工操作，进行服务器运维任务，人工执行大量命令、处理命令执行结果，非常耗费时间</li><li>编码脚本（运维自动化）:脚本进行定时计划，脚本就可以在固定的时间段高效率执行运维任务，人工只需要脚本维护、主动干预！极大的减低工作量！</li></ul><p>如：网络工作，技术支持、网络安全、测试...平时都是充斥着大量的手工执行命令、处理命令结果</p><ul><li>编码脚本（网络自动化）：脚本自动构建路由地址、自动检测网络通信、自动完成渗透工作、自动完成系统测试...</li></ul><h4 id="_2-为什么学习python" tabindex="-1">（2） 为什么学习Python <a class="header-anchor" href="#_2-为什么学习python" aria-label="Permalink to &quot;（2） 为什么学习Python&quot;">​</a></h4><p>编程语言全球范围内公开的大致有2000多种..，国内主流的开发语言有10多种（和工作相关）；查看2024年10月份的TIOBE编程语言排行榜，可以看到排名前10的语言如下图所示：</p><p><img src="'+p+'" alt="image-20241015185748769"></p><p>对于常见的编程语言，它们在国内的现状：</p><ul><li>python：全民语言！从开发、运维、网络、安全、测试、数据、分析、可视化、办公、AI...</li><li>c/c++：底层系统开发、嵌入式开发的主流编程语言！</li><li>Java：软件开发行业当之无愧的王牌语言，国内90%以上的程序员都是Java程序员！</li><li>JavaScript：前端界面开发行业的核心语言，2022年之后前端工作由其他岗位兼任！</li><li>Go/Rust：近些年出现的新兴语言，号称性能怪兽！</li></ul><p><img src="'+r+'" alt="image-20241110200155322"></p><h3 id="_1-2、-构建开发环境" tabindex="-1">1.2、 构建开发环境 <a class="header-anchor" href="#_1-2、-构建开发环境" aria-label="Permalink to &quot;1.2、 构建开发环境&quot;">​</a></h3><h4 id="_1-官方网站" tabindex="-1">（1） 官方网站 <a class="header-anchor" href="#_1-官方网站" aria-label="Permalink to &quot;（1） 官方网站&quot;">​</a></h4><p>python官方网站：<code>https://www.python.org</code>，菜单中关注两个 导航</p><ul><li>Downloads：下载，下载python解释工具的导航，解释执行代码的工具称为 <strong>解释器</strong></li><li><strong>Documentation</strong>：文档，官方第一手学习资料</li></ul><p><img src="'+h+'" alt="image-20241015200420364"></p><p>任何软件、工具、技术，官方的资料都是第一手学习资料，任何新的版本出现/新的技术突破，随时了解和学习官方文档是每个修仙人员的必修技能！</p><ul><li><strong>What&#39;s new in Python 3.13：新版本特性介绍</strong>，最新的版本发布，最新的技术变动都包含在该文档中</li><li>Tutorial：教程，官方的程序开发设计 教程</li><li><strong>Library Reference：标准库参考</strong>，python官方内置模块的说明文档，对应课程第二部分</li><li>Language Reference：语法参考，python官方语法说明文档，对应课程第一部分</li></ul><p><img src="'+c+'" alt="image-20241015200604612"></p><h4 id="_2-构建环境" tabindex="-1">（2） 构建环境 <a class="header-anchor" href="#_2-构建环境" aria-label="Permalink to &quot;（2） 构建环境&quot;">​</a></h4><p>python代码，是被一个称为 <strong>解释器</strong> 的工具，解释执行的！</p><p><img src="'+d+'" alt="image-20241015201556020"></p><h5 id="下载解释器" tabindex="-1">下载解释器 <a class="header-anchor" href="#下载解释器" aria-label="Permalink to &quot;下载解释器&quot;">​</a></h5><p>点击官方网站<code>Downloads下载-&gt; All Release所有版本</code></p><p><img src="'+g+'" alt="image-20241015201655899"></p><p>进入的下载页面中，选择合适的版本</p><ul><li>3.8：市场遗留项目主要版本，并且很多通用项目依然选择使用3.8版本；官方结束支持不代表这个版本淘汰，市场上很多第三方模块依赖python3.8版本并且还没有及时更新到最新版本；</li><li><strong>3.12：市场新项目开发推荐的版本，<strong>目前各种应用中的工作比较正常，比较稳定！进行</strong>系统学习</strong>、<strong>新项目研发</strong>时可以优先选择该版本进行处理；</li><li>3.13：当前最新版本，适合新特性研究，新突破技术的学习；不适合系统学习和项目研发，一旦出现新的问题(可能是全网你第一次遇到)，大概率导致学习中断、项目流产！</li></ul><p><img src="'+m+'" alt="image-20241015201910665"></p><blockquote><p>⚠️注意：通常一个开发人员的计算机上，会同时存在多个版本的python解释器！为了开发不同版本依赖的项目</p></blockquote><p>点击下载时，新进入的页面中，包含多个小版本的python文件，如何选择版本呢？</p><ul><li>注意：python版本命名规则<code>a(主版本号).b(子版本号).c(小版本号)</code>，主版本号更新意味着整个python从底层进行了颠覆式的改造、或者新增、删除大模块功能；子版本号更新通常是大模块功能的升级、或者小模块增加、删除；小版本号更新通常是BUG修复</li><li>下载文件时，选择小版本号越新，表示该版本中的已知BUG越少</li></ul><p><img src="'+u+'" alt="image-20241015202546845"></p><p>点击对应的版本号进行下载，发现多个文件，如何选择合适的安装文件(从上到下依次①②③④)？</p><ul><li>① c/c++源代码文件：适合unix/linux中编译安装，或者学习官方底层开发技术</li><li>② macos安装文件：适合苹果电脑系统安装文件</li><li><strong>③ windows离线安装包</strong>：下载完整版的离线文件，本地直接点击安装即可 <ul><li><strong>windows installer(64bit):</strong> 适合windows系统 64位操作系统 Intel芯片 安装包</li><li>windows installer(32bit): 适合windows系统 32位操作系统 Intel芯片 安装包</li><li>windows installer(ARM64): 适合windows系统 64位操作系统 ARM芯片(开发板常用芯片) 安装包</li></ul></li><li>④ windows在线安装包：下载安装启动文件，本地点击执行时需要联网才能安装</li></ul><p><img src="'+k+'" alt="image-20241015202939054"></p><p>查看自己的电脑的信息：</p><p><img src="'+_+'" alt="image-20241015203422710"></p><h5 id="安装解释器" tabindex="-1">安装解释器 <a class="header-anchor" href="#安装解释器" aria-label="Permalink to &quot;安装解释器&quot;">​</a></h5><p>安装解释器过程中，需要注意如下的几个安装步骤</p><p>注意一：开始安装时，勾选环境变量复选框，选择自定义安装</p><img src="'+y+'" alt="image-20241015204050327" style="zoom:67%;"><p>注意二：下面的步骤中，勾选<code>install for all users(给所有用户安装)</code></p><ul><li>注意：按照图中的复选框进行勾选；可能和你安装的步骤中的勾选情况不一致</li></ul><img src="'+b+'" alt="image-20241015204149128" style="zoom:67%;"><p>注意三：安装完成后，可能会提示环境变量长度限制；如果出现点击解除限制即可！</p><img src="'+P+'" alt="image-20241016144923846" style="zoom:67%;"><blockquote><p>⚠️注意：如果电脑上已经存在python</p><p>① 如果可以正常使用，直接使用即可！</p><p>② 如果已经损坏，无法正常卸载和安装；推荐下载和电脑上相同的版本python安装包，安装时选择<code>Repire修复</code>，修复完成后重新卸载安装即可</p></blockquote><h4 id="_3-验证结果" tabindex="-1">（3） 验证结果 <a class="header-anchor" href="#_3-验证结果" aria-label="Permalink to &quot;（3） 验证结果&quot;">​</a></h4><p>打开系统命令提示符窗口，执行命令查看python版本信息</p><p><img src="'+q+'" alt="image-20241015204504022"></p><p>执行命令：<code>python --version</code>，查看python版本信息；如果命令执行结果可以正常显示版本信息，说明安装完成</p><ul><li>注意：执行命令<code>python --version</code>，等价于<code>python -V</code>,注意命令之间的空格</li></ul><p><img src="'+C+'" alt="image-20241015204602713"></p><blockquote><p>📝 拓展：认识python终端，学会区分windows命令窗口和python终端</p><p>① windows命令窗口</p><p><img src="'+F+'" alt="image-20241015204716470"></p><p>② python终端：windows命令窗口中输入python直接回车，进入的终端窗口</p><ul><li>注意：python终端中，输入命令<code>exit()</code>退出到windows命令窗口</li></ul><p><img src="'+x+'" alt="image-20241015204833448"></p></blockquote><h3 id="_1-3、-第一个应用程序" tabindex="-1">1.3、 第一个应用程序 <a class="header-anchor" href="#_1-3、-第一个应用程序" aria-label="Permalink to &quot;1.3、 第一个应用程序&quot;">​</a></h3><h4 id="_1-文件整理" tabindex="-1">（1） 文件整理 <a class="header-anchor" href="#_1-文件整理" aria-label="Permalink to &quot;（1） 文件整理&quot;">​</a></h4><p>课程中，建议大家将所有的课程资料进行规范的统一整理，示例：</p><p>将本次课程的所有资料包含在：<code>D:/PythonProgramming/</code>目录中</p><ul><li><p>D:/PythonProgramming202410/<code>Note/</code>：存放随堂笔记</p></li><li><p>D:/PythonProgramming202410/<code>Code/</code>：存放每节课的代码</p></li><li><p>D:/PythonProgramming202410/<code>Video/</code>：存放每节课的视频</p></li><li><p>D:/PythonProgramming202410/<code>Work/</code>：存放每节课的作业</p></li><li><p>D:/PythonProgramming202410/<code>Res/</code>：存放每节课资源文件</p></li><li><p>注意：文件路径中尽量不要包含中文、空格</p></li></ul><h4 id="_2-编写代码" tabindex="-1">（2） 编写代码 <a class="header-anchor" href="#_2-编写代码" aria-label="Permalink to &quot;（2） 编写代码&quot;">​</a></h4><p>① 创建文件</p><p>新建一个记事本文件：<code>新建文本文档.txt</code></p><p><img src="'+v+`" alt="image-20241016145042685"></p><p>② 编写代码</p><p>使用记事本打开这个文本文件，编写如下的代码<strong>并保存</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 控制台中输出一个提示信息</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello python!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>③ 重命名文件</p><p>保存好代码之后，关闭记事本软件；接下来重命名文件</p><p><code>新建文本文档.txt</code> -&gt; <code>demo01.py</code></p><p>错误示例：忘记保存导致文件里面没有内容，后续执行的时候没有结果</p><p><img src="`+w+'" alt="image-20241015205811287"></p><p>修改后缀名后的正确文件：大小1kb</p><p><img src="'+f+'" alt="image-20241015210002936"></p><h4 id="_3-执行代码" tabindex="-1">（3） 执行代码 <a class="header-anchor" href="#_3-执行代码" aria-label="Permalink to &quot;（3） 执行代码&quot;">​</a></h4><p>在代码文件所在的文件夹中，上面的地址栏输入<code>cmd</code>，直接在命令行进入代码所在目录</p><p><img src="'+D+'" alt="image-20241015210127921"></p><p>此时打开的命令窗口，观察路径已经在代码文件夹中</p><p>命令中输入：<code>python demo01.py</code>，让python解释器解释执行代码，得到输出结果</p><p><img src="'+E+'" alt="image-20241015210215066"></p><blockquote><p>📝 windows中如何在默认路径中切换到代码目录？</p><p>① 直接使用cd命令，切换不同磁盘目录失效</p><ul><li><p>C:\\Users\\mouwe&gt;cd F:\\系统课程\\201410成都文理Python精培\\Code\\Lesson01</p></li><li><p>C:\\Users\\mouwe&gt;</p></li></ul><p>② 可以借助<code>/d</code>选项，切换目录的同时切换到不同的磁盘</p><ul><li><p>C:\\Users\\mouwe&gt;cd /d F:\\系统课程\\201410成都文理Python精培\\Code\\Lesson01</p></li><li><p>F:\\系统课程\\201410成都文理Python精培\\Code\\Lesson01&gt;</p></li></ul></blockquote><h3 id="_1-4、-认识开发工具" tabindex="-1">1.4、 认识开发工具 <a class="header-anchor" href="#_1-4、-认识开发工具" aria-label="Permalink to &quot;1.4、 认识开发工具&quot;">​</a></h3><p>使用记事本编写代码，也发现了很多问题：</p><ul><li>代码没有颜色提示，很容易误操作写错字符</li><li>代码没有智能提示，严重影响大家的发挥</li><li>代码没有错误提示，严重影响开发效率</li><li>.....</li></ul><p>企业开发过程中，一般很少使用记事本编写代码（临时修改配置、少量代码），Python开发中推荐两款工具</p><ul><li>VSCode：微软开发的一款通用编程工具，可以编写任何语法的代码</li><li>Pycharm：jetbrains公司的专用开发工具，可以高效编写python相关代码</li></ul><h4 id="_1-vscode" tabindex="-1">（1） VSCode <a class="header-anchor" href="#_1-vscode" aria-label="Permalink to &quot;（1） VSCode&quot;">​</a></h4><p>适合人群：高级开发人员、骨灰级开发人员</p><p>这是一款定制强度非常高的开发工具，操作过程中需要配合大量的插件和配置使用，对于新手程序员非常不友好！</p><ul><li>Code Insider：内测版本，绿色图标</li><li>Code：稳定版本，蓝色图标（推荐）</li></ul><p>官方网站：<code>https://code.visualstudio.com/</code></p><ul><li>注意：推荐安装，经常使用VSCode编写不同语法的代码，临时修改项目代码</li></ul><h4 id="_2-pycharm" tabindex="-1">（2） Pycharm <a class="header-anchor" href="#_2-pycharm" aria-label="Permalink to &quot;（2） Pycharm&quot;">​</a></h4><p>适合人群：电脑性能不差的所有人群！</p><p>这是一款jetbrains公司推出的专用开发工具，业内知名度非常高！</p><ul><li>Commuinity：社区免费版，可以开发纯python应用；现阶段学习没有任何障碍！</li><li>Professional：专业收费版，可以开发以Python为核心的、主流的各种语法的项目应用！</li></ul><p>官方网站：<code>https://www.jetbrains.com</code></p><ul><li>Intellij IDEA：主流的JAVA开发工具</li><li>Phpstrom：主流的PHP开发工具</li><li><strong>PyCharm：主流的Python开发工具</strong></li><li>Rider：主流的R语言处理工具</li><li>RubyMine：主流的Ruby开发工具</li><li>WebStorm：主流的前端开发工具之一</li><li>Golang：主流的Go语言开发工具</li><li>Fleet：对标VSCode通用开发工具</li><li>DataSpell:主流的数据分析工具</li><li>DataGrip：主流的数据库操作工具</li><li>....</li></ul><p><img src="'+A+`" alt="image-20241015211949237"></p><p>Pycharm工具包含两个不同的版本：</p><table tabindex="0"><thead><tr><th>版本</th><th>说明</th></tr></thead><tbody><tr><td>Pycharm Professional</td><td>专业收费版本，适合开发数据、Web等高级应用的开发工具</td></tr><tr><td>Pycharm Community</td><td>社区免费版本，适合开发纯Python应用的高级工具</td></tr></tbody></table><h3 id="_1-5、-注释" tabindex="-1">1.5、 注释 <a class="header-anchor" href="#_1-5、-注释" aria-label="Permalink to &quot;1.5、 注释&quot;">​</a></h3><p>任何编程语言中，都有一种给自然人查看的信息，用于说明代码的作用：<strong>注释</strong></p><ul><li>使用自然语言，描述信息</li><li>代码执行过程中不会执行</li><li>注意：只要是个人，就要有注释！<strong>注释很重要，后续编写代码的时候，一定要记得写注释！</strong></li></ul><h4 id="_1-单行注释" tabindex="-1">（1） 单行注释 <a class="header-anchor" href="#_1-单行注释" aria-label="Permalink to &quot;（1） 单行注释&quot;">​</a></h4><p>语法</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 符号开头，当前行就是一行注释内容，主要用于说明一行或者多行代码的作用</span></span></code></pre></div><h4 id="_2-多行注释" tabindex="-1">（2） 多行注释 <a class="header-anchor" href="#_2-多行注释" aria-label="Permalink to &quot;（2） 多行注释&quot;">​</a></h4><p>语法1</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">###############################################################</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用多个单行注释组成一个多行注释</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通常用于描述(很)多行代码的作用</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">###############################################################</span></span></code></pre></div><p>语法2：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">编写多行注释内容</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">使用三对单引号包含注释文本</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;</span></span></code></pre></div><h4 id="_3-文档注释" tabindex="-1">（3） 文档注释 <a class="header-anchor" href="#_3-文档注释" aria-label="Permalink to &quot;（3） 文档注释&quot;">​</a></h4><p>语法：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">编写可以在最终项目文档中出现的说明文字</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">使用三对双引号包含注释文本；通常文档注释出现在 python 文件的开头位置(第一行)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">作者： 大牧老师</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">时间： 2024-10</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">备注： ......</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">联系人：xxxxxx</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span></code></pre></div><h3 id="_1-6、项目任务" tabindex="-1">1.6、项目任务 <a class="header-anchor" href="#_1-6、项目任务" aria-label="Permalink to &quot;1.6、项目任务&quot;">​</a></h3><p>附件：Trains-01练习.md</p><p><img src="`+B+'" alt="image-20250502102359908"></p>',130)]))}const W=s(R,[["render",S]]);export{N as __pageData,W as default};
